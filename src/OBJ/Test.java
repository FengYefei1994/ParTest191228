/*静态成员与非静态成员内存分析
*1、对象（非静态）属性：空间开辟发生在对象实例化的时候
*	内存：对象的实例化开辟空间，对象销毁而释放
*注意：定义两个对象时，各自开辟区域内存；对象访问静态方法不可取。
*
*2、静态属性：空间开辟发生在类第一次加载到JVM内存时进行（程序第一次使用该类的时候）
*      内存：在程序运行过程中常占内存，直到程序停止释放
*
*3、非静态方法可以直接访问静态成员和非静态成员；
*	静态方法能直接调用静态成员，非静态成员不可直接调用
*静态方法不可使用this关键字
*
*
*先有类，才能有被使用的对象
*
*/

package OBJ;

public class Test {

	public static void main(String[] args) {
		//实例化Dog对象
/*		在堆上开辟空间（方法不在堆上存储，在方法区），开辟属性大小的空间；开辟name、color、age共计20个字节*/

		
		//访问类成员――属性、方法
		Dogs xiaoming =new Dogs();    //非静态                           
		
		//方法属性：静态（static）、实例（非静态：instance）
		
		//用对象访问非静态(访问非静态方法用.语法)
		xiaoming.name="jsifdn";
		xiaoming.color="black";
		xiaoming.beat();
		
		//用类访问静态成员
		Dogs.show();
	}

}
